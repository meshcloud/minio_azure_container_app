name: Build and Push Coraza-Caddy Container

on:
  schedule:
    # Build weekly to get latest security updates
    - cron: '0 2 * * 1'
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'Caddyfile'
      - '.github/workflows/build-container.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'Caddyfile'
  workflow_dispatch:
    inputs:
      caddy_version:
        description: 'Caddy version to build'
        required: false
        default: '2.7'
      coraza_version:
        description: 'Coraza version to build'
        required: false
        default: 'v2'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/coraza-caddy

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          CADDY_VERSION=${{ github.event.inputs.caddy_version || '2.7' }}
          CORAZA_VERSION=${{ github.event.inputs.coraza_version || 'v2' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Test container
      run: |
        docker run --rm -d --name test-coraza \
          -p 8080:8080 -p 8443:8443 \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        sleep 10
        curl -f http://localhost:8080/health || exit 1
        docker stop test-coraza